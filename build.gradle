plugins {
    id 'org.springframework.boot' version '2.7.2'
    id 'io.spring.dependency-management' version '1.0.12.RELEASE'
    id 'java'
}

allprojects {
    group = 'in.parkjw.apps'
    version = '0.0.1-SNAPSHOT-' + new Date().format("MMddHHmm")
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = '11'

    repositories {
        mavenCentral()
    }

    task initSourceFolders {
        sourceSets*.java.srcDirs*.each {
            if (!it.exists()) {
                it.mkdirs()
            }
        }

        sourceSets*.resources.srcDirs*.each {
            if (!it.exists()) {
                it.mkdirs()
            }
        }
    }

    dependencies {
        // spring
        implementation 'org.springframework.boot:spring-boot-starter-aop'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

        // lombok
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        // model mapper
        implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.3.8'

        // json
        implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.5'

        // swagger
        implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'

        // dev
        implementation 'org.springframework.boot:spring-boot-devtools'

        // commons
        implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.11'
        implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'

        // interceptor -- javadoc 생성시 필요
        // compile group: 'javax.interceptor', name: 'javax.interceptor-api', version: '1.2.2'

        // test
        // testImplementation 'org.springframework.security:spring-security-test'
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
    }
}